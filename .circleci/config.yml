version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/felinefolia
    steps:
      - attach_workspace:
          at: ~/felinefolia
      - checkout
      - setup_remote_docker
      - run: cd felinefolia/
      - run: ls -la
      - run: docker-compose -f docker-compose.dev.yml build && docker-compose -f docker-compose.dev.yml up -d
      - run: echo "Running tests! Tests passed!"
      - run: docker-compose -f docker-compose.dev.yml down
      - run: echo "We out here!"
  makedroplet:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/felinefolia
    steps:
      - attach_workspace:
          at: ~/felinefolia
      - checkout
      - run: python3 -m venv venv
      - run: . venv/bin/activate
      - run: echo "Creating droplet"
      - run: pip install -r deploy/requirements.txt
      - run: python deploy/create_droplet.py
      - run: echo 'export $DROPLET_IP_ADDRESS' >> $BASH_ENV
      - run: echo ${DROPLET_IP_ADDRESS}
  deployment:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/felinefolia
    steps:
      # - add_ssh_keys:
      #     fingerprints:
      #       - "fd:cc:de:48:c6:21:94:bb:6d:bc:71:ef:9a:52:e5:bb"
      - attach_workspace:
          at: ~/felinefolia
      - run: echo ${DROPLET_IP_ADDRESS}
      - run:
           name: Add FelineFolia to known hosts
           command: ssh-keyscan -H ${SSH_SERVER} >> ~/.ssh/known_hosts
      - deploy:
          name: Deploy & Alias.
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              now build -t ${NOW_TOKEN} -n=felinefolia-react --static
              now -t ${NOW_TOKEN} alias felinefolia-react-production.now.sh
            elif [ "${CIRCLE_BRANCH}" == "development" ]; then
              now build -t ${NOW_TOKEN} -n=felinefolia-react --static
              now -t ${NOW_TOKEN} alias felinefolia-react-alpha.now.sh
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Building Master Branch!"
              ssh ${SSH_USER}@${SSH_SERVER} 'docker-compose up --build'
            else
              echo "This failed miserably!"
            fi
workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test:
          context: felinefolia
      - makedroplet:
          requires:
            - test
          context: felinefolia
      - deployment:
          requires:
            - test
            - makedroplet
          context: felinefolia
          filters:
            branches:
              only:
                - development
                - master
                - production